-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;

CREATE TABLE IF NOT EXISTS core.company
(
    id bigserial NOT NULL,
    name character varying COLLATE pg_catalog."default" NOT NULL,
    nit_code character varying COLLATE pg_catalog."default" NOT NULL,
    created_at timestamp with time zone NOT NULL DEFAULT now(),
    updated_at timestamp with time zone NOT NULL DEFAULT now(),
    is_active boolean NOT NULL DEFAULT true,
    CONSTRAINT "PK_056f7854a7afdba7cbd6d45fc20" PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS core.contract
(
    id bigserial NOT NULL,
    is_active boolean NOT NULL DEFAULT true,
    start_date timestamp with time zone NOT NULL,
    end_date timestamp with time zone,
    created_at timestamp with time zone NOT NULL DEFAULT now(),
    updated_at timestamp with time zone NOT NULL DEFAULT now(),
    company_id integer,
    employee_id integer,
    CONSTRAINT "PK_17c3a89f58a2997276084e706e8" PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS core."docType"
(
    id bigserial NOT NULL,
    "docType" character varying COLLATE pg_catalog."default" NOT NULL,
    created_at timestamp with time zone NOT NULL DEFAULT now(),
    updated_at timestamp with time zone NOT NULL DEFAULT now(),
    CONSTRAINT "PK_1b44f3824362ef93f9df4cee7bf" PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS core.employee
(
    id bigserial NOT NULL,
    name character varying COLLATE pg_catalog."default" NOT NULL,
    "lastName" character varying COLLATE pg_catalog."default" NOT NULL,
    "secondLastName" character varying COLLATE pg_catalog."default" NOT NULL,
    birth_date timestamp with time zone NOT NULL,
    email character varying COLLATE pg_catalog."default" NOT NULL,
    phone character varying COLLATE pg_catalog."default" NOT NULL,
    "docNum" integer NOT NULL,
    "employeeCode" character varying COLLATE pg_catalog."default" NOT NULL,
    created_at timestamp with time zone NOT NULL DEFAULT now(),
    updated_at timestamp with time zone NOT NULL DEFAULT now(),
    "docType_id" integer,
    "employeeRole_id" integer,
    CONSTRAINT "PK_3c2bc72f03fd5abbbc5ac169498" PRIMARY KEY (id),
    CONSTRAINT "UQ_817d1d427138772d47eca048855" UNIQUE (email)
);

CREATE TABLE IF NOT EXISTS core.employee_role
(
    id bigserial NOT NULL,
    "employeeRole" character varying COLLATE pg_catalog."default" NOT NULL,
    is_active boolean NOT NULL DEFAULT true,
    created_at timestamp with time zone NOT NULL DEFAULT now(),
    updated_at timestamp with time zone NOT NULL DEFAULT now(),
    CONSTRAINT "PK_1c105b756816efbdeae09a9ab65" PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS core.payment_status
(
    id bigserial NOT NULL,
    status character varying COLLATE pg_catalog."default" NOT NULL,
    is_active boolean NOT NULL DEFAULT true,
    created_at timestamp with time zone NOT NULL DEFAULT now(),
    updated_at timestamp with time zone NOT NULL DEFAULT now(),
    CONSTRAINT "PK_b59e2e874b077ea7acf724e4711" PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS core.payments
(
    id bigserial NOT NULL,
    payment_date timestamp with time zone NOT NULL DEFAULT now(),
    amount integer NOT NULL,
    created_at timestamp with time zone NOT NULL DEFAULT now(),
    updated_at timestamp with time zone NOT NULL DEFAULT now(),
    "paymentStatus_id" integer NOT NULL,
    company_id integer NOT NULL,
    plan_id integer NOT NULL,
    CONSTRAINT "PK_197ab7af18c93fbb0c9b28b4a59" PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS core.plan
(
    id bigserial NOT NULL,
    name character varying COLLATE pg_catalog."default" NOT NULL,
    price integer NOT NULL,
    description character varying COLLATE pg_catalog."default" NOT NULL,
    is_active boolean NOT NULL DEFAULT true,
    created_at timestamp with time zone NOT NULL DEFAULT now(),
    updated_at timestamp with time zone NOT NULL DEFAULT now(),
    CONSTRAINT "PK_54a2b686aed3b637654bf7ddbb3" PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS core.profile
(
    id bigserial NOT NULL,
    name character varying COLLATE pg_catalog."default" NOT NULL,
    "lastName" character varying COLLATE pg_catalog."default" NOT NULL,
    "secondLastName" character varying COLLATE pg_catalog."default" NOT NULL,
    birth_date timestamp with time zone NOT NULL,
    phone character varying COLLATE pg_catalog."default" NOT NULL,
    "countryCode" character varying COLLATE pg_catalog."default" NOT NULL,
    "cityCode" character varying COLLATE pg_catalog."default" NOT NULL,
    email character varying COLLATE pg_catalog."default" NOT NULL,
    "docNum" integer NOT NULL,
    "nitCode" character varying COLLATE pg_catalog."default" NOT NULL,
    "employeeCode" character varying COLLATE pg_catalog."default" NOT NULL,
    username character varying COLLATE pg_catalog."default" NOT NULL,
    password character varying COLLATE pg_catalog."default" NOT NULL,
    is_active boolean NOT NULL DEFAULT true,
    created_at timestamp with time zone NOT NULL DEFAULT now(),
    updated_at timestamp with time zone NOT NULL DEFAULT now(),
    "userRole_id" integer NOT NULL,
    "docType_id" integer NOT NULL,
    CONSTRAINT "PK_3dd8bfc97e4a77c70971591bdcb" PRIMARY KEY (id),
    CONSTRAINT "UQ_3825121222d5c17741373d8ad13" UNIQUE (email)
);

CREATE TABLE IF NOT EXISTS core.suscription
(
    id bigserial NOT NULL,
    is_active boolean NOT NULL DEFAULT true,
    start_date timestamp with time zone NOT NULL,
    end_date timestamp with time zone NOT NULL,
    created_at timestamp with time zone NOT NULL DEFAULT now(),
    updated_at timestamp with time zone NOT NULL DEFAULT now(),
    id_payment integer,
    CONSTRAINT "PK_eced4cd6c780c3752ce6e3e2214" PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS core.user_role
(
    id bigserial NOT NULL,
    role character varying COLLATE pg_catalog."default" NOT NULL,
    is_active boolean NOT NULL DEFAULT true,
    created_at timestamp with time zone NOT NULL DEFAULT now(),
    updated_at timestamp with time zone NOT NULL DEFAULT now(),
    CONSTRAINT "PK_fb2e442d14add3cefbdf33c4561" PRIMARY KEY (id)
);

ALTER TABLE IF EXISTS core.contract
    ADD CONSTRAINT "FK_1dbf9a5c77120410dfac83b817c" FOREIGN KEY (company_id)
    REFERENCES core.company (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS core.contract
    ADD CONSTRAINT "FK_e629d91803764629bdd2fc7ce9d" FOREIGN KEY (employee_id)
    REFERENCES core.employee (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS "REL_e629d91803764629bdd2fc7ce9"
    ON core.contract(employee_id);


ALTER TABLE IF EXISTS core.employee
    ADD CONSTRAINT "FK_5e8182dd71a452da3e81ea85237" FOREIGN KEY ("employeeRole_id")
    REFERENCES core.employee_role (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS core.employee
    ADD CONSTRAINT "FK_862f75abc3bfd9fd1cdb67506f6" FOREIGN KEY ("docType_id")
    REFERENCES core."docType" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS core.payments
    ADD CONSTRAINT "FK_500d5dc384fecbc927697ab94bf" FOREIGN KEY ("paymentStatus_id")
    REFERENCES core.payment_status (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS core.payments
    ADD CONSTRAINT "FK_company_id" FOREIGN KEY (company_id)
    REFERENCES core.company (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS core.payments
    ADD CONSTRAINT "FK_plan_id" FOREIGN KEY (plan_id)
    REFERENCES core.plan (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS core.profile
    ADD CONSTRAINT "FK_522e0554d4633909962c220e968" FOREIGN KEY ("userRole_id")
    REFERENCES core.user_role (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS core.profile
    ADD CONSTRAINT "FK_ffdae762f604317dca306710abe" FOREIGN KEY ("docType_id")
    REFERENCES core."docType" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS core.suscription
    ADD CONSTRAINT "FK_plan_id" FOREIGN KEY (id_payment)
    REFERENCES core.payments (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;

END;